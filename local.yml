version: '3.8'

services:
  traefik:
    image: traefik:latest
    container_name: traefik_proxy
    restart: always
    security_opt:
      - no-new-privileges:true
    command:
        ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
        - --api.insecure=true # <== Enabling insecure api, NOT RECOMMENDED FOR PRODUCTION
        - --api.dashboard=true # <== Enabling the dashboard to view services, middlewares, routers, etc...
        - --api.debug=true # <== Enabling additional endpoints for debugging and profiling
        ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
        - --log.level=ERROR # <== Setting the level of the logs from traefik
        ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
    labels:
        # Enable traefik on itself to view dashboard and assign subdomain to view it
        - traefik.enable=false
        # Setting the domain for the dashboard
        - traefik.http.routers.api.rule=Host("traefik.docker.localhost")
        # Enabling the api to be a service to access
        - traefik.http.routers.api.service=api@internal
    ports:
        # HTTP  
        - 80:80
        # HTTPS / SSL port
        - 443:443
    volumes:
        # Volume for docker admin
        - /var/run/docker.sock:/var/run/docker.sock:ro
        # Map the static configuration into the container
        - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
        # Map the configuration into the container
        - ./traefik/config.yml:/etc/traefik/config.yml:ro
        # Map the certificats into the container
        - ./certs:/etc/certs:ro
    networks:
      - web

  api:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port 5000 --reload --workers 1 --ssl-keyfile "./certs/local-key.pem" --ssl-certfile "./certs/local-cert.pem" --ssl-cert-reqs 1
    container_name: perseus_api
    restart: always
    ports:
      - 8001:5000
    volumes: 
      - .:/app
    depends_on:
      - db
    links:
      - db:db
    env_file:
      - .env
    labels:
      # The following labels define the behavior and rules of the traefik proxy for this container 
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
      # Enable this container to be mapped by traefik:
      - traefik.enable=true
      # URL to reach this container:
      - traefik.http.routers.web.rule=Host("perseus.docker.localhost")
      # URL to reach this container for secure traffic:
      - traefik.http.routers.websecured.rule=Host("perseus.docker.localhost")
      # Defining entrypoint for https:
      - traefik.http.routers.websecured.entrypoints=websecured
    networks:
      - web
      - api

  db:
    image: postgres:14-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./scripts/init_pgtrgm_extension.sql:/docker-entrypoint-initdb.d/init_pgtrgm_extension.sql
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    networks:
      - api

volumes:
    postgres_data:

networks:
  web:
    name: web
  api:
    name: api
    driver: bridge